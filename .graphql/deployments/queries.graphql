query Deployment(
  $deploymentId: UUID!
  $first: Int
  $after: String
  $runOrderBy: DeploymentRunOrder
  $instanceOrderBy: DeploymentRunInstanceOrder
) {
  deployment(id: $deploymentId) {
    id
    name
    dtCreated
    dtModified
    deploymentSpecs(first: $first, after: $after) {
      nodes {
        id
        endpointUrl
        externalApplied
        dtCreated
        dtInvalid
        error
        actor {
          avatarUrl
          fullName
          email
        }
        cluster {
          name
          fqdn
        }
        data {
          image
          containerRegistry
          port
          command
          env {
            name
            value
          }
          models {
            id
            path
          }
          repositories {
            dataset
            mountPath
            repositories {
              url
              name
              ref
              username
              password
            }
          }
          resources {
            replicas
            autoscaling {
              enabled
              maxReplicas
              metrics {
                metric
                summary
                value
              }
            }
            instanceType
          }
        }
        deploymentRuns(first: $first, orderBy: $runOrderBy) {
          nodes {
            id
            availableReplicas
            readyReplicas
            replicas
            dtDeleted
            dtModified
            dtCreated
            deploymentRunInstances(first: $first, orderBy: $instanceOrderBy) {
              nodes {
                id
                externalApplied
                dtStarted
                dtFinished
                dtDeleted
                phase
                state
                stateMessage
              }
            }
          }
        }
      }

      edges {
        cursor
      }

      pageInfo {
        hasNextPage
      }
    }
  }
}

query DeploymentList($projectHandle: String!, $first: Int, $after: String) {
  deployments(projectId: $projectHandle, first: $first, after: $after) {
    nodes {
      id
      name
      deploymentSpecs(first: 10) {
        nodes {
          deploymentRuns(first: 10) {
            nodes {
              id
              dtDeleted
              availableReplicas
              readyReplicas
              replicas
              deploymentRunInstances(first: 10) {
                nodes {
                  id
                  externalApplied
                  dtStarted
                  dtFinished
                  phase
                  state
                  stateMessage
                }
              }
            }
          }
          data {
            image
            containerRegistry
            port
            command
            env {
              name
              value
            }
            models {
              id
              path
            }
            repositories {
              dataset
              mountPath
              repositories {
                url
                name
                ref
                username
                password
              }
            }
            resources {
              replicas
              instanceType
              autoscaling {
                enabled
                maxReplicas
                metrics {
                  metric
                  summary
                  value
                }
              }
            }
          }
          id
          externalApplied
          dtCreated
          dtInvalid
          error
        }
      }
      dtCreated
    }

    edges {
      cursor
    }

    pageInfo {
      hasNextPage
    }
  }
}
