import { args, command, flag, flags, fmt, z } from "../../zcli.ts";
import { config } from "../../config.ts";
import { credentials } from "../../credentials.ts";

/**
 * This variable is automatically generated by `zcli add`. Do not remove this
 * or change its name unless you're no longer using `zcli add`.
 */
const subCommands: ReturnType<typeof command>[] = [];

export const logout = command("logout", {
  short: "Log out of the CLI.",
  long: `
    Log out of the CLI for the current team, a specific team, or all teams.
  `,
  commands: subCommands,
  args: args({
    short: "The teams to logout of.",
  }).array(z.string().describe("The team to logout of.")),
  flags: flags({
    all: flag({
      short: "Log out of all teams.",
      aliases: ["a"],
    }).oboolean(),
  }),
}).run(async function* ({ args, flags }) {
  if (flags.all) {
    await config.set("team", null);
    await credentials.clear();
    yield `Logged out of all teams`;
    return;
  }

  const currentTeam = await config.get("team");

  if (args.length) {
    for (const team of args) {
      if (team) {
        if (team === currentTeam) {
          await config.set("team", null);
        }

        await credentials.delete(`keys.${team}`);
        yield `Logged out of team "${fmt.colors.bold(team)}"`;
      }
    }

    return;
  }

  if (currentTeam) {
    await config.set("team", null);
    await credentials.delete(`keys.${currentTeam}`);
    yield `Logged out of team "${fmt.colors.bold(currentTeam)}"`;
    return;
  }

  yield `Not logged in to any teams`;
});
