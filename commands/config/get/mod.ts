// deno-lint-ignore-file no-explicit-any
import { args, command, z } from "../../../zcli.ts";
import { config, configPaths } from "../../../config.ts";
import { select } from "../../../prompts/select.ts";
import { asserts } from "../../../lib/asserts.ts";

/**
 * This variable is automatically generated by `zcli add`. Do not remove this
 * or change its name unless you're no longer using `zcli add`.
 */
const subCommands: ReturnType<typeof command>[] = [];

export const get = command("get", {
  short: "Get a configuration value.",
  long: `
    This command gets a configuration value. You can pass a key to get a specific
    value, or you can pass no arguments to get all configuration values.

    For example, to get the current team run:
    \`\`\`
    pspace config get team
    \`\`\`
  `,
  commands: subCommands,
  args: args({
    short: "The key to get.",
  }).tuple([z.enum(configPaths).describe("The configuration key.")]).optional(),
}).run(async function* ({ args }) {
  let [key] = args;

  if (!key) {
    key = await select("Select a key:", configPaths);
    asserts(key, "No key selected.");
  }

  const value = await config.get(key as any);
  yield value;
});
