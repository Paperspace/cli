import { projects } from "../../../api/projects.ts";
import { invariant } from "../../../lib/invariant.ts";
import { input } from "../../../prompts/input.ts";
import { args, command, flag, flags, z } from "../../../zcli.ts";

/**
 * This variable is automatically generated by `zcli add`. Do not remove this
 * or change its name unless you're no longer using `zcli add`.
 */
const subCommands: ReturnType<typeof command>[] = [];

export const update = command("update", {
  short: "Update an existing project.",
  long: `
    Update an existing project.

    Example:
    \`\`\`
    pspace project update psukfyemho7 --name my-cool-project
    \`\`\`
  `,
  use: `pspace project update <project-id> [flags]`,
  commands: subCommands,
  args: args().tuple([z.string().describe("The project ID to update.")]),
  flags: flags({
    name: flag({
      short: "The new name for the project.",
    }).string().min(1).max(120).optional(),
  }),
}).run(
  async ({ args, flags }) => {
    const [handle] = args;
    let { name } = flags;

    if (!name) {
      name = await input("New name:");
      invariant(name, "You must provide a new name for the project.");
    }

    const result = await projects.update({ name, handle });
    invariant(result.ok, result);
    console.log("Done!", result);
  },
);
